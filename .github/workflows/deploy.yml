name: Build image

on:
  push:
    branches:
      - '*'

    tags:
      - '*'

env:
  IMAGE_NAME: 'tmp'

jobs:

  image:
    
    timeout-minutes: 10

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (contains(github.event.head_commit.message, 'ls-service2')

    steps:
      - uses: actions/checkout@v2

      # ref: https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md
      # ref: https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1

      - name: Build image
        run: docker buildx build ls-service2 --tag $IMAGE_NAME

      # - name: Log into registry
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image
        run: |
          IMAGE_ID=lncknight/ls-service2

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          VERSION=$VERSION
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
