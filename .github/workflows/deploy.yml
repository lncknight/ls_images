name: Build image

on:
  push:
    branches:
      - '*'

    tags:
      - '*'

env:
  IMAGE_NAME: 'whatever'

jobs:

  nginx:
    env:
      IMAGE_NAME: 'nginx'

    ######### common #########
    timeout-minutes: 10

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.head_commit.message, 'nginx')

    steps:
      # - name: debug
      #   run: |
      #     echo "${{ github.event.head_commit.message }}"
      #     echo '----------1'
      #     echo "${{ env.IMAGE_NAME }}"
      #     echo '----------2'
      #     echo $IMAGE_NAME


      - uses: actions/checkout@v2

      # ref: https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md
      # ref: https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-v1-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-v1-

      # - name: Build image
      #   run: docker buildx build --no-cache $IMAGE_NAME --tag tmp
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Setup upterm session
        uses: lhotari/action-upterm@v1

      # -
        # name: Build and push
        # uses: docker/build-push-action@v3
        # with:
        #   context: test
        #   platforms: linux/amd64,linux/arm64
        #   push: ${{ github.event_name != 'pull_request' }}
        #   tags: ${{ steps.meta.outputs.tags }}
        #   labels: ${{ steps.meta.outputs.labels }}
          
      - name: Push image
        run: |
          IMAGE_ID=lncknight/$IMAGE_NAME

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=$(date +"%Y%m%d")
          # [ "$VERSION" == "main" ] && VERSION=latest

          VERSION=$VERSION
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag tmp $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  ls-api:
    env:
      IMAGE_NAME: 'ls-api'

    ######### common #########
    timeout-minutes: 10

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.head_commit.message, 'ls-api')

    steps:
      # - name: debug
      #   run: |
      #     echo "${{ github.event.head_commit.message }}"
      #     echo '----------1'
      #     echo "${{ env.IMAGE_NAME }}"
      #     echo '----------2'
      #     echo $IMAGE_NAME


      - uses: actions/checkout@v2

      # ref: https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md
      # ref: https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-v1-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-v1-

      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1
        
      - name: Build image
        run: docker buildx build --no-cache $IMAGE_NAME --tag tmp

      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image
        run: |
          IMAGE_ID=lncknight/$IMAGE_NAME

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=$(date +"%Y%m%d")
          # [ "$VERSION" == "main" ] && VERSION=latest

          VERSION=$VERSION
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag tmp $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  ls-service2:
    env:
      IMAGE_NAME: 'ls-service2'

    ######### common #########
    timeout-minutes: 10

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.head_commit.message, 'ls-service2')

    steps:
      - uses: actions/checkout@v2

      # ref: https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md
      # ref: https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image
        run: docker buildx build $IMAGE_NAME --tag tmp

      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image
        run: |
          IMAGE_ID=lncknight/$IMAGE_NAME

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=$(date +"%Y%m%d")
          # [ "$VERSION" == "main" ] && VERSION=latest

          VERSION=$VERSION
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag tmp $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  ls-web-v2:
    env:
      IMAGE_NAME: 'ls-web-v2'

    ######### common #########
    timeout-minutes: 10

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.head_commit.message, 'ls-web-v2')

    steps:
      - uses: actions/checkout@v2

      # ref: https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md
      # ref: https://evilmartians.com/chronicles/build-images-on-github-actions-with-docker-layer-caching
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image
        run: docker buildx build $IMAGE_NAME --tag tmp

      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image
        run: |
          IMAGE_ID=lncknight/$IMAGE_NAME

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=$(date +"%Y%m%d")
          # [ "$VERSION" == "main" ] && VERSION=latest

          VERSION=$VERSION
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag tmp $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  # test mulitple platform
  # ref: https://github.com/docker/build-push-action/blob/master/docs/advanced/multi-platform.md
  test:
    env:
      IMAGE_NAME: 'test'

    ######### common #########
    timeout-minutes: 10

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.event.head_commit.message, 'test')

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            lncknight/test
            lncknight/test
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: test
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}